angular.module("jsChips",["ui.router","hljs","javascript-chips-tpl"]).controller("jsChipsCtrl",["$scope",function(){}]).config(function($stateProvider){$stateProvider.state("index",{url:"",views:{sidebar:{templateUrl:"templates/sidebar.html"},content:{templateUrl:"templates/home.html"}}}).state("this",{url:"/this",views:{sidebar:{templateUrl:"templates/sidebar.html"},content:{templateUrl:"templates/this/this.html"}}}).state("prototypes",{url:"/prototypes",views:{sidebar:{templateUrl:"templates/sidebar.html"},content:{templateUrl:"templates/content.html"}}})});
!function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/home.html",'<h1>Javascript Chips</h1>\n<p class="lead">Discovering Javascript with <code>examples</code>.</p>\n<p>Javascript is a beautiful and very powerful language. There are many different topics, patterns and implementations that show off Javascript like <a ui-sref="prototypes">prototypical inheritence</a>, <a ui-sref="prototypes">lexical scope</a> to the meaning of <a ui-sref="this"><code>this</code></a>.</p>\n<p>The aim of this site is to present examples or "<span class="text-warning">chips</span>" of Javascript in all (well nearly all) its glory. Contributors are welcome in the form of pull requests. Fork me!</p>\n\n\n<iframe src="http://ghbtns.com/github-btn.html?user=paulreeve&repo=javascript-chips&type=fork&size=large"\n  allowtransparency="true" frameborder="0" scrolling="0"></iframe>\n')}])}(),function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/sidebar.html",'SIDEBAR\n\n<ul class="nav nav-pills nav-stacked">\n	<li ui-sref-active="active">\n		<a href ui-sref="this">this</a>\n	</li>\n	<li ui-sref-active="active">\n		<a href ui-sref="prototypes">prototypes</a>\n	</li>	\n</ul>')}])}(),function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/this/this.html",'<h1>this</h1>\n<p class="lead">The special variable <code>this</code> is available everywhere and its value in most cases is determined by how a function is called.</p>\n<p>This page explores the complexity that comes with <code>this</code> and how <code>"use strict";</code> effects it.</p>\n\n<div class="panel panel-info">\n  <div class="panel-heading">\n    <h3 class="panel-title">Simple use in "sloppy" mode.</h3>\n  </div>\n  <div class="panel-body">\n	  <table class="table">\n	    <tr>\n	    	<th width="50%">code</th>\n	    	<th width="50%">result</th>\n	    </tr>\n	    <tr>\n	    	<td><div hljs include="\'templates/this/code/this1.tpl\'"></div></td>\n	    	<td><p class="well console">Window {top: Window, window: Window, location: Location, external: Object, chrome: Objectâ€¦}</p></td>\n	    </tr>\n	  </table>	  	\n	  <p>Notice <code>this</code> refers to the global object (<code>window</code>).</p>\n  </div>\n</div>\n<div class="panel panel-info">\n  <div class="panel-heading">\n    <h3 class="panel-title">Simple use in "strict" mode.</h3>\n  </div>\n  <div class="panel-body">\n	  <table class="table">\n	    <tr>\n	    	<th width="50%">code</th>\n	    	<th width="50%">result</th>\n	    </tr>\n	    <tr>\n	    	<td><div hljs include="\'templates/this/code/this2.tpl\'"></div></td>\n	    	<td><p class="well console">undefined</p></td>\n	    </tr>\n	  </table>	  	\n	  <p>In <code>strict</code> mode, <code>this</code> is undefined.</p>\n  </div>\n</div>\n<div class="panel panel-info">\n  <div class="panel-heading">\n    <h3 class="panel-title">Specify the value of <code>this</code> with <code>call()</code></h3>\n  </div>\n  <div class="panel-body">\n	  <table class="table">\n	    <tr>\n	    	<th width="50%">code</th>\n	    	<th width="50%">result</th>\n	    </tr>\n	    <tr>\n	    	<td><div hljs include="\'templates/this/code/this3.tpl\'"></div></td>\n	    	<td><p class="well console">26</p></td>\n	    </tr>\n	  </table>	  	\n  </div>\n</div>')}])}(),function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/this/code/this1.tpl","var makeChips = function () {\n  console.log(this);\n};\n\nmakeChips();")}])}(),function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/this/code/this2.tpl",'var makeChips = function () {\n  "use strict";\n  console.log(this);\n};\n\nmakeChips();')}])}(),function(){try{app=angular.module("javascript-chips-tpl")}catch(err){app=angular.module("javascript-chips-tpl",[])}app.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/this/code/this3.tpl","var makeChips = function (size, salt) {\n  console.log(this.getChipCount());\n};\n\nvar chipper = {\n  getChipCount: function () {\n  	return 26;\n  }\n};\n\nmakeChips.call(chipper, 'large', true);")}])}();